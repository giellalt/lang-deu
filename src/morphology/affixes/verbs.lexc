! ======================== !
! Deutsche Verbmorphologie !
! ======================== !



! Schwache Verben
! ===============

LEXICON W_OHNE-GE
+V@D.PTC@:0@D.PTC@         KeinPraf ;    ! Alle ge- formen wegnehmen.
+V0@D.PTC@:%>t@D.PTC@  Praf ;    ! keine ge-formen akseptiert.

LEXICON W_OHNE-GE_ACKERN
+V@D.PTC@:0@D.PTC@         KeinPraf_ACKERN ;    ! Alle ge- formen wegnehmen.
+V0@D.PTC@:%>t@D.PTC@  Praf ;    ! keine ge-formen akseptiert.

LEXICON W
+V@D.PTC@:0@D.PTC@         KeinPraf ;    ! Alle ge- formen wegnehmen.
+V0@R.PTC.ON@:%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.

LEXICON W_ACKERN
+V@D.PTC@:0@D.PTC@         KeinPraf_ACKERN ;    ! Alle ge- formen wegnehmen.
+V0@R.PTC.ON@:%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.



LEXICON KeinPraf
     Inf ;
     Sup ;
     IND-PRS ;
     IND-PRT ;
     SUBJ-PRS ;
     SUBJ-PRT ;
     IMPRT ;

LEXICON Praf
 PRAF_01 ;
LEXICON PRAF_01
+Prf:     POST-V_01 ;
!!A_abgebrannt__adj ;
+PrfPrc+Pos: A_abenteuerlich__adj-positive ;
+PrfPrc+Comp:  A_abenteuerlich__adj-comp ;
+PrfPrc+Superl:%>e  A_abenteuerlich__adj-sup ;

LEXICON Praf_ST
 PRAF_ST_01 ;
LEXICON PRAF_ST_01
+Prf@R.PTC.ON@:0@R.PTC.ON@     POST-V_01 ;
+Prf@R.PTC.OFF@:0@R.PTC.OFF@     POST-V_01 ;
!!A_abendfüllend__adj ;
+PrfPrc+Pos: A_abenteuerlich__adj-positive ;
+PrfPrc:  A_abenteuerlich__adj-comp ;
+PrfPrc:%>e  A_abenteuerlich__adj-sup ;



LEXICON KeinPraf_ACKERN
     Inf_ACKERN ;
     IND-PRS_ACKERN ;
     IND-PRT ;
     SUBJ-PRS_ACKERN ;
     SUBJ-PRT ;
     IMPRT ;

LEXICON Inf
+Inf:%>en POST-V_01 ;
+Sup:%>en Sup ;
+PrsPrc:%>end POST-V_01 ;
!!A_abendfüllend__adj
!! CHECKME, should there be +Comp and +Superl
+PrsPrc+Pos00@D.SUP@:%>end@D.SUP@ A_abenteuerlich__adj-positive ;

LEXICON Inf_ACKERN
+Inf:%>n POST-V_01 ;
+Sup:%>n Sup ;
+PrsPrc:%>nd POST-V_01 ;
!!A_abendfüllend__adj
!! CHECKME, should there be +Comp and +Superl
+PrsPrc+Pos0@D.SUP@:%>nd@D.SUP@ A_abenteuerlich__adj-positive ;

LEXICON Sup
@R.SUP.ON@ POST-V_02 ;


LEXICON IND-PRS
IND-PRS-SG1 ;
IND-PRS-SG2 ;
IND-PRS-SG3 ;
IND-PRS-PL1 ;
IND-PRS-PL2 ;
IND-PRS-PL3 ;

LEXICON IND-PRT
+Ind+Prt+Sg1:%>te   POST-V_01 ;
+Ind+Prt+Sg2:%>test POST-V_01 ;
+Ind+Prt+Sg3:%>te   POST-V_01 ;
+Ind+Prt+Pl1:%>ten  POST-V_01 ;
+Ind+Prt+Pl2:%>tet  POST-V_01 ;
+Ind+Prt+Pl3:%>ten  POST-V_01 ;

LEXICON IND-PRT_SEIN
+Ind+Prt+Sg1:%>   POST-V_01 ;
+Ind+Prt+Sg2:%>st POST-V_01 ;
+Ind+Prt+Sg3:%>   POST-V_01 ;
+Ind+Prt+Pl1:%>en  POST-V_01 ;
+Ind+Prt+Pl2:%>t  POST-V_01 ;
+Ind+Prt+Pl3:%>en  POST-V_01 ;

LEXICON SUBJ-PRS
+Subj+Prs+Sg1:%>e  POST-V_01 ;
+Subj+Prs+Sg2:%>est POST-V_01 ;
+Subj+Prs+Sg3:%>e  POST-V_01 ;
+Subj+Prs+Pl1:%>en POST-V_01 ;
+Subj+Prs+Pl2:%>et  POST-V_01 ;
+Subj+Prs+Pl3:%>en POST-V_01 ;

LEXICON SUBJ-PRS_SEIN
+Subj+Prs+Sg1:%>  POST-V_01 ;
+Subj+Prs+Sg2:%>st POST-V_01 ;
+Subj+Prs+Sg3:%>  POST-V_01 ;
+Subj+Prs+Pl1:%>en POST-V_01 ;
+Subj+Prs+Pl2:%>et  POST-V_01 ;
+Subj+Prs+Pl3:%>en POST-V_01 ;

LEXICON SUBJ-PRT
+Subj+Prt+Sg1:%>te   POST-V_01 ;
+Subj+Prt+Sg2:%>test POST-V_01 ;
+Subj+Prt+Sg3:%>te   POST-V_01 ;
+Subj+Prt+Pl1:%>ten  POST-V_01 ;
+Subj+Prt+Pl2:%>tet  POST-V_01 ;
+Subj+Prt+Pl3:%>ten  POST-V_01 ;

LEXICON SUBJ-PRT_SEIN
+Subj+Prt+Sg1:%>e   POST-V_01 ;
+Subj+Prt+Sg2:%>est POST-V_01 ;
+Subj+Prt+Sg3:%>e   POST-V_01 ;
+Subj+Prt+Pl1:%>en  POST-V_01 ;
+Subj+Prt+Pl2:%>t  POST-V_01 ;
+Subj+Prt+Pl3:%>en  POST-V_01 ;

LEXICON IMPRT
+Imprt+Sg2:%> POST-V_01 ;
+Imprt+Pl2:%>t POST-V_01 ;


LEXICON IND-PRS_ACKERN
+Ind+Prs+Sg1:%^Pen%^RmVow%>e  POST-V_01 ; !!= * @CODE@ works with ackern
IND-PRS-SG2 ;
IND-PRS-SG3 ;
+Ind+Prs+Pl1:%>n POST-V_01 ;
IND-PRS-PL2 ;
+Ind+Prs+Pl3:%>n POST-V_01 ;

LEXICON SUBJ-PRS_ACKERN
+Subj+Prs+Sg1:%^Pen%^RmVow%>e  POST-V_01 ;
+Subj+Prs+Sg2:%>st POST-V_01 ;
+Subj+Prs+Sg3:%^Pen%^RmVow%>e  POST-V_01 ;
+Subj+Prs+Pl1:%>n POST-V_01 ;
+Subj+Prs+Pl2:%>t  POST-V_01 ;
+Subj+Prs+Pl3:%>n POST-V_01 ;





! Starke Verben
! ===============

LEXICON V_haben__vbhaver !!= * @CODE@ haben:ha
+V00@R.PTC.ON@:b%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_haben__vbhaver_01 ;
+V@D.PTC@:b@D.PTC@ Inf ;
LEXICON V_haben__vbhaver_01
+Ind+Prs+Sg1:b%>e  POST-V_01 ;
IND-PRS-SG2 ;
IND-PRS-SG3 ;
+Ind+Prs+Pl1:b%>en POST-V_01 ;
+Ind+Prs+Pl2:b%>t  POST-V_01 ;
+Ind+Prs+Pl3:b%>en POST-V_01 ;

:t IND-PRT ;
:b SUBJ-PRS ;
:t%^Umlaut SUBJ-PRT ;

+Imprt+Sg2:b%>e POST-V_01 ;
+Imprt+Pl2:b%>t POST-V_01 ;

LEXICON V_/müssen__vbmod !!= * @CODE@ müssen:muss
+V+Mod@R.PTC.ON@:%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Mod@D.PTC@:00@D.PTC@ V_/müssen__vb_01 ;
+V+Mod@D.PTC@:%^Umlaut0@D.PTC@ Inf ;
LEXICON V_/müssen__vb_01
+Ind+Prs+Sg1:  POST-V_01 ;
IND-PRS-SG2 ;
+Ind+Prs+Sg3:  POST-V_01 ;
+Ind+Prs+Pl1:%^Umlaut%>en POST-V_01 ;
+Ind+Prs+Pl2:%^Umlaut%>t  POST-V_01 ;
+Ind+Prs+Pl3:%^Umlaut%>en POST-V_01 ;

: IND-PRT ;
:%^Umlaut SUBJ-PRS ;
:%^Umlaut SUBJ-PRT ;

LEXICON V_/dürfen__vbmod !!= * @CODE@ dürfen:darf
+V+Mod@R.PTC.ON@:%^A2U%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Mod@D.PTC@:00@D.PTC@ V_/dürfen__vb_01 ;
+V+Mod@D.PTC@:%^A2Ü0@D.PTC@ Inf ;
LEXICON V_/dürfen__vb_01
+Ind+Prs+Sg1:  POST-V_01 ;
IND-PRS-SG2 ;
+Ind+Prs+Sg3:  POST-V_01 ;
+Ind+Prs+Pl1:%^A2Ü%>en POST-V_01 ;
+Ind+Prs+Pl2:%^A2Ü%>t  POST-V_01 ;
+Ind+Prs+Pl3:%^A2Ü%>en POST-V_01 ;

:%^A2U IND-PRT ;
:%^A2Ü SUBJ-PRS ;
:%^A2Ü SUBJ-PRT ;

LEXICON V_/können__vbmod !!= * @CODE@ können:konn
+V+Mod@R.PTC.ON@:%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Mod@D.PTC@:00@D.PTC@ V_/können__vb_01 ;
+V+Mod@D.PTC@:%^Umlaut0@D.PTC@ Inf ;
LEXICON V_/können__vb_01
+Ind+Prs+Sg1:%^LowerVow  POST-V_01 ;
+Ind+Prs+Sg2:%^LowerVow%>st POST-V_01 ;
+Ind+Prs+Sg3:%^LowerVow  POST-V_01 ;
+Ind+Prs+Pl1:%^Umlaut%>en POST-V_01 ;
+Ind+Prs+Pl2:%^Umlaut%>t  POST-V_01 ;
+Ind+Prs+Pl3:%^Umlaut%>en POST-V_01 ;

: IND-PRT ;
:%^Umlaut SUBJ-PRS ;
:%^Umlaut SUBJ-PRT ;

LEXICON V_/mögen__vbmod !!= * @CODE@ mögen:mog
+V+Mod@R.PTC.ON@:%^DeV%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Mod@D.PTC@:00@D.PTC@ V_/mögen__vb_01 ;
+V+Mod@D.PTC@:%^Umlaut0@D.PTC@ Inf ;
LEXICON V_/mögen__vb_01
+Ind+Prs+Sg1:%^LowerVow  POST-V_01 ;
+Ind+Prs+Sg2:%^LowerVow%>st POST-V_01 ;
+Ind+Prs+Sg3:%^LowerVow  POST-V_01 ;
+Ind+Prs+Pl1:%^Umlaut%>en POST-V_01 ;
+Ind+Prs+Pl2:%^Umlaut%>t  POST-V_01 ;
+Ind+Prs+Pl3:%^Umlaut%>en POST-V_01 ;

:%^DeV IND-PRT ;
:%^Umlaut SUBJ-PRS ;
:%^Umlaut%^DeV SUBJ-PRT ;

LEXICON V_/sollen__vbmod !!= * @CODE@ sollen:soll
+V+Mod@R.PTC.ON@:%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Mod@D.PTC@:00@D.PTC@ V_/sollen__vb_01 ;
+V+Mod@D.PTC@:%^Umlaut0@D.PTC@ Inf ;
LEXICON V_/sollen__vb_01
+Ind+Prs+Sg1:  POST-V_01 ;
IND-PRS-SG2 ;
+Ind+Prs+Sg3:  POST-V_01 ;
IND-PRS-PL1 ;
IND-PRS-PL2 ;
IND-PRS-PL3 ;

: IND-PRT ;
: SUBJ-PRS ;
: SUBJ-PRT ;


LEXICON V_/werden__vaux !!= * @CODE@ werden:w
+V+Aux@D.PTC@:orden@D.PTC@  Praf_ST ;    ! ge-formen nicht akseptiert.
+V+Aux@D.PTC@:00@D.PTC@ V_/werden__vaux_01 ;
+V+Aux0@D.PTC@:erd@D.PTC@ Inf ;
LEXICON V_/werden__vaux_01
+Ind+Prs+Sg1:erde  POST-V_01 ;
+Ind+Prs+Sg2:ir%>st POST-V_01 ;
+Ind+Prs+Sg3:ird  POST-V_01 ;
+Ind+Prs+Pl1:erd%>en POST-V_01 ;
+Ind+Prs+Pl2:erd%>t  POST-V_01 ;
+Ind+Prs+Pl3:erd%>en POST-V_01 ;

:urd IND-PRT ;
:erd SUBJ-PRS ;
:urd%^Umlaut SUBJ-PRT ;

LEXICON V_/wollen__vaux !!= * @CODE@ wollen:w
+V+Aux@R.PTC.ON@:oll%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V+Aux@D.PTC@:00@D.PTC@ V_/wollen__vaux_01 ;
+V+Aux0@D.PTC@:oll@D.PTC@ Inf ;
LEXICON V_/wollen__vaux_01
+Ind+Prs+Sg1:ill  POST-V_01 ;
+Ind+Prs+Sg2:ill%>st POST-V_01 ;
+Ind+Prs+Sg3:ill  POST-V_01 ;
+Ind+Prs+Pl1:oll%>en POST-V_01 ;
+Ind+Prs+Pl2:oll%>t  POST-V_01 ;
+Ind+Prs+Pl3:oll%>en POST-V_01 ;

:oll IND-PRT ;
:oll SUBJ-PRS ;
:oll SUBJ-PRT ;



LEXICON V_/werden__vblex !!= * @CODE@ werden:w
+V@R.PTC.ON@:orden@R.PTC.ON@  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:00@D.PTC@ V_/werden__vb_01 ;
+V0@D.PTC@:erd@D.PTC@ Inf ;
LEXICON V_/werden__vb_01
+Ind+Prs+Sg1:erde  POST-V_01 ;
+Ind+Prs+Sg2:ir%>st POST-V_01 ;
+Ind+Prs+Sg3:ird  POST-V_01 ;
+Ind+Prs+Pl1:erd%>en POST-V_01 ;
+Ind+Prs+Pl2:erd%>t  POST-V_01 ;
+Ind+Prs+Pl3:erd%>en POST-V_01 ;

:urd IND-PRT ;
:erd SUBJ-PRS ;
:urd%^Umlaut SUBJ-PRT ;
+Imprt+Sg2:erde POST-V_01 ;
+Imprt+Pl2:erdet POST-V_01 ;

LEXICON V_/kommen__vblex !!= * @CODE@ kommen:k
+V:ommen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_/kommen__vb_01 ;
+V000@D.PTC@:omm@D.PTC@ Inf ;
LEXICON V_/kommen__vb_01
+Ind+Prs+Sg1:omme  POST-V_01 ;
+Ind+Prs+Sg2:omm%>st POST-V_01 ;
+Ind+Prs+Sg3:ommt  POST-V_01 ;
+Ind+Prs+Pl1:omm%>en POST-V_01 ;
+Ind+Prs+Pl2:omm%>t  POST-V_01 ;
+Ind+Prs+Pl3:omm%>en POST-V_01 ;

:am IND-PRT_SEIN ;
:omm SUBJ-PRS ;
:am%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:omm POST-V_01 ;
+Imprt+Pl2:ommt POST-V_01 ;

!!
LEXICON V_g/eben__vblex !!= * @CODE@ geben:gab
+V:%^A2E%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_g/eben__vb_01 ;
+V000@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_g/eben__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;

!!
LEXICON V_spr/echen__vblex !!= * @CODE@ geben:gab
+V:%^A2O%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_spr/echen__vb_01 ;
+V000@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_spr/echen__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2E%>t POST-V_01 ;

!!
LEXICON V_g/elten__vblex !!= * @CODE@ gelten:galt
+V:%^A2O%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_g/elten__vb_01 ;
+V000@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_g/elten__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
+Ind+Prs+Sg3:%^A2I  POST-V_01 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
:%^A2Ö SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;

!!
LEXICON V_tr/eten__vblex !!= * @CODE@ treten:tratt
+V:%^A2E%^CC2C%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_tr/eten__vb_01 ;
+V000@D.PTC@:%^A2E%^CC2C@D.PTC@ Inf ;
LEXICON V_tr/eten__vb_01
:%^A2E%^CC2C  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2E%^CC2C IND-PRS-PL1 ;
:%^A2E%^CC2C  IND-PRS-PL2 ;
:%^A2E%^CC2C IND-PRS-PL3 ;

:%^CC2C IND-PRT_SEIN ;
:%^A2E%^CC2C SUBJ-PRS ;
:%^Umlaut%^CC2C SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2E%^CC2C%>et POST-V_01 ;

LEXICON V_g/ehen__vblex !!= * @CODE@ gehen:g
+V:angen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_g/ehen__vb_01 ;
+V000@D.PTC@:eh@D.PTC@ Inf ;
LEXICON V_g/ehen__vb_01
+Ind+Prs+Sg1:eh%>e  POST-V_01 ;
+Ind+Prs+Sg2:eh%>st POST-V_01 ;
+Ind+Prs+Sg3:eht  POST-V_01 ;
+Ind+Prs+Pl1:eh%>en POST-V_01 ;
+Ind+Prs+Pl2:eh%>t  POST-V_01 ;
+Ind+Prs+Pl3:eh%>en POST-V_01 ;

:ing IND-PRT_SEIN ;
:eh SUBJ-PRS ;
:ing SUBJ-PRT_SEIN ;
+Imprt+Sg2:eh POST-V_01 ;
+Imprt+Pl2:eh%>t POST-V_01 ;

LEXICON V_st/ehen__vblex !!= * @CODE@ stehen:st
+V:anden  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_st/ehen__vb_01 ;
+V000@D.PTC@:eh@D.PTC@ Inf ;
LEXICON V_st/ehen__vb_01
:eh  IND-PRS-SG1 ;
:eh IND-PRS-SG2 ;
:eh  IND-PRS-SG3 ;
:eh IND-PRS-PL1 ;
:eh  IND-PRS-PL2 ;
:eh IND-PRS-PL3 ;

:and IND-PRT_SEIN ;
:eh SUBJ-PRS ;
:and%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:eh POST-V_01 ;
+Imprt+Pl2:eh%>t POST-V_01 ;

!!
LEXICON V_s/ehen__vblex !!= * @CODE@ sehen:sah
+V:%^A2Een  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_s/ehen__vb_01 ;
+V000@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_s/ehen__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2IE IND-PRS-SG2 ;
:%^A2IE  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2IE POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;
!!
LEXICON V_schr/ecken__vblex !!= * @CODE@ schrecken:schrack
+V:%^A2Een  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_schr/ecken__vb_01 ;
+V000@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_schr/ecken__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

:%^CC2C IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^Umlaut%^CC2C SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;

!!
LEXICON V_w/erfen__vblex !!= * @CODE@ werfen:warf
+V:%^A2Oen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_w/erfen__vb_01 ;
+V@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_w/erfen__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^A2Ü SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;
!!
LEXICON V_b/ersten__vblex !!= * @CODE@ bersten:barst
+V:%^A2Oen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_b/ersten__vb_01 ;
+V@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_b/ersten__vb_01
:%^A2E  IND-PRS-SG1 ;
+Ind+Prs+Sg2:%^A2I POST-V_01 ; !! birst
:%^A2I  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E%>e  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E SUBJ-PRS ;
:%^A2Ü SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2Et POST-V_01 ;
!!
LEXICON V_k/ennen__vblex !!= * @CODE@ kennen:kann
+V:%>t  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_k/ennen__vb_01 ;
+V@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_k/ennen__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2E IND-PRS-SG2 ;
:%^A2E  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT ;
:%^A2E SUBJ-PRS ;
:%^A2E SUBJ-PRT ;
+Imprt+Sg2:%^A2E POST-V_01 ;
+Imprt+Pl2:%^A2E%>t POST-V_01 ;
!!
LEXICON V_s/enden__vblex !!= * @CODE@ senden:sand
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:%^A2E@D.PTC@ V_s/enden__vb_01 ;
+V@D.PTC@:%^A2E@D.PTC@ Inf ;
LEXICON V_s/enden__vb_01
:%^A2E  IND-PRS-SG1 ;
:%^A2E IND-PRS-SG2 ;
:%^A2E  IND-PRS-SG3 ;
:%^A2E IND-PRS-PL1 ;
:%^A2E  IND-PRS-PL2 ;
:%^A2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2E IND-PRT ;
:%^A2E SUBJ-PRS ;
:%^A2E SUBJ-PRT ;
+Imprt+Sg2:%^A2E POST-V_01 ;
+Imprt+Pl2:%^A2E%>e%>t POST-V_01 ;

!!
LEXICON V_/nehmen__vblex !!= * @CODE@ nehmen:n
+V:ommen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_/nehmen__vb_01 ;
+V000@D.PTC@:ehm@D.PTC@ Inf ;
LEXICON V_/nehmen__vb_01
:ehm  IND-PRS-SG1 ;
:imm IND-PRS-SG2 ;
:imm  IND-PRS-SG3 ;
:ehm IND-PRS-PL1 ;
:ehm  IND-PRS-PL2 ;
:ehm IND-PRS-PL3 ;

:ahm IND-PRT_SEIN ;
:ehm SUBJ-PRS ;
:ahm%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:ehm POST-V_01 ;
+Imprt+Pl2:ehm%>t POST-V_01 ;

!!
LEXICON V_dr/eschen__vblex !!= * @CODE@ dreschen:drosch
+V:%^O2E%>en  Praf_ST ;    ! ge-formen akseptiert.
+V:%^O2E%>t  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_dr/eschen__vb_01 ;
+V000@D.PTC@:%^O2E@D.PTC@ Inf ;
LEXICON V_dr/eschen__vb_01
:%^O2E  IND-PRS-SG1 ;
:%^O2I IND-PRS-SG2 ;
:%^O2E IND-PRS-SG2 ;
+Ind+Prs+Sg2:%^O2I POST-V_01 ;
:%^O2I  IND-PRS-SG3 ;
:%^O2E IND-PRS-PL1 ;
:%^O2E  IND-PRS-PL2 ;
:%^O2E IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^O2E IND-PRT ;
:%^O2E SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
:%^O2E SUBJ-PRT ;
+Imprt+Sg2:%^O2I POST-V_01 ;
+Imprt+Pl2:%^O2E%>t POST-V_01 ;

!!
LEXICON V_/laufen__vblex !!= * @CODE@ laufen:l
+V:aufen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_/laufen__vb_01 ;
+V000@D.PTC@:lauf@D.PTC@ Inf ;
LEXICON V_/laufen__vb_01
:auf  IND-PRS-SG1 ;
:auf%^Umlaut IND-PRS-SG2 ;
:auf%^Umlaut IND-PRS-SG3 ;
:auf IND-PRS-PL1 ;
:auf  IND-PRS-PL2 ;
:auf IND-PRS-PL3 ;

:ief IND-PRT_SEIN ;
:auf SUBJ-PRS ;
:ief SUBJ-PRT_SEIN ;
+Imprt+Sg2:auf POST-V_01 ;
+Imprt+Pl2:auf%>t POST-V_01 ;

LEXICON V_h/alten__vblex !!= * @CODE@ halten:halt
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_h/alten__vb_01 ;
+V000@D.PTC@:@D.PTC@ Inf ;
LEXICON V_h/alten__vb_01
:  IND-PRS-SG1 ;
:%^Umlaut IND-PRS-SG2 ;
+Ind+Prs+Sg3:%^Umlaut POST-V_01 ;
: IND-PRS-PL1 ;
:  IND-PRS-PL2 ;
: IND-PRS-PL3 ;

:%^A2IE IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^A2IE SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:e%>t POST-V_01 ;

LEXICON V_l/assen__vblex !!= * @CODE@ lassen:l
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_l/assen__vb_01 ;
+V000@D.PTC@:@D.PTC@ Inf ;
LEXICON V_l/assen__vb_01
:  IND-PRS-SG1 ;
:%^Umlaut IND-PRS-SG2 ;
:%^Umlaut IND-PRS-SG3 ;
: IND-PRS-PL1 ;
:  IND-PRS-PL2 ;
: IND-PRS-PL3 ;

:%^A2IE%^CC2C IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^A2IE%^CC2C SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:%>t POST-V_01 ;

!!
LEXICON V_st/oßen__vblex !!= * @CODE@ stoßen:stoß
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_st/oßen__vb_01 ;
+V000@D.PTC@:@D.PTC@ Inf ;
LEXICON V_st/oßen__vb_01
:  IND-PRS-SG1 ;
:%^Umlaut%>e IND-PRS-SG2 ;
:%^Umlaut%>e IND-PRS-SG3 ;
: IND-PRS-PL1 ;
:%>e IND-PRS-PL2 ;
: IND-PRS-PL3 ;

:%^O2IE IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^O2IE SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:e%>t POST-V_01 ;

!!
LEXICON V_bl/eiben__vblex !!= * @CODE@ bleiben:bleib
+V:%^EI2IE%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_bl/eiben__vb_01 ;
+V000@D.PTC@:@D.PTC@ Inf ;
LEXICON V_bl/eiben__vb_01
:  IND-PRS-SG1 ;
: IND-PRS-SG2 ;
: IND-PRS-SG3 ;
: IND-PRS-PL1 ;
: IND-PRS-PL2 ;
: IND-PRS-PL3 ;

:%^EI2IE IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^EI2IE SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:%>t POST-V_01 ;

!!
LEXICON V_r/eißen__vblex !!= * @CODE@ reißen:reiss
+V:%^EI2Ien  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_r/eißen__vb_01 ;
+V@D.PTC@:%^CC2C@D.PTC@ Inf ;
LEXICON V_r/eißen__vb_01
:%^CC2C  IND-PRS-SG1 ;
:%^CC2C%>e IND-PRS-SG2 ;
:%^CC2C IND-PRS-SG3 ;
:%^CC2C IND-PRS-PL1 ;
:%^CC2C IND-PRS-PL2 ;
:%^CC2C IND-PRS-PL3 ;

:%^EI2I IND-PRT_SEIN ;
:%^CC2C SUBJ-PRS ;
:%^EI2I SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^CC2C POST-V_01 ;
+Imprt+Pl2:%^CC2C%>e%>t POST-V_01 ;

!!
LEXICON V_gl/eichen__vblex !!= * @CODE@ gleichen:gleich
+V:%^EI2Ien  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_gl/eichen__vb_01 ;
+V@D.PTC@:@D.PTC@ Inf ;
LEXICON V_gl/eichen__vb_01
:  IND-PRS-SG1 ;
:%>e IND-PRS-SG2 ;
: IND-PRS-SG3 ;
: IND-PRS-PL1 ;
: IND-PRS-PL2 ;
: IND-PRS-PL3 ;

:%^EI2I IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^EI2I SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:%>t POST-V_01 ;

!!
LEXICON V_schw/immen__vblex !!= * @CODE@ schwimmen:schwamm
+V:%^A2Oen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_schw/immen__vb_01 ;
+V000@D.PTC@:%^A2I@D.PTC@ Inf ;
LEXICON V_schw/immen__vb_01
:%^A2I  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2I IND-PRS-PL1 ;
:%^A2I  IND-PRS-PL2 ;
:%^A2I IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2I SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2It POST-V_01 ;

!!
LEXICON V_br/ingen__vblex !!= * @CODE@ bringen:br
+V:acht  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_br/ingen__vb_01 ;
+V00@D.PTC@:ing@D.PTC@ Inf ;
LEXICON V_br/ingen__vb_01
:ing  IND-PRS-SG1 ;
:ing IND-PRS-SG2 ;
:ing  IND-PRS-SG3 ;
:ing IND-PRS-PL1 ;
:ing  IND-PRS-PL2 ;
:ing IND-PRS-PL3 ;

:acht IND-PRT ;
:ing SUBJ-PRS ;
:acht%^Umlaut SUBJ-PRT ;
+Imprt+Sg2:ing POST-V_01 ;
+Imprt+Pl2:ing%>t POST-V_01 ;

!!
LEXICON V_d/ingen__vblex !!= * @CODE@ dingen:dang
+V:%>t  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_d/ingen__vb_01 ;
+V00@D.PTC@:%^A2I@D.PTC@ Inf ;
LEXICON V_d/ingen__vb_01
:%^A2I  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I  IND-PRS-SG3 ;
:%^A2I IND-PRS-PL1 ;
:%^A2I  IND-PRS-PL2 ;
:%^A2I IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2I SUBJ-PRS ;
:%^Umlaut SUBJ-PRT ;
:%^A2I SUBJ-PRT ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2I%>t POST-V_01 ;

!!
LEXICON V_f/inden__vblex !!= * @CODE@ finden:fand
+V:%^A2Uen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_f/inden__vb_01 ;
+V000@D.PTC@:%^A2I@D.PTC@ Inf ;
LEXICON V_f/inden__vb_01
:%^A2I  IND-PRS-SG1 ;
:%^A2I IND-PRS-SG2 ;
:%^A2I%>e  IND-PRS-SG3 ;
:%^A2I IND-PRS-PL1 ;
:%^A2I%>e  IND-PRS-PL2 ;
:%^A2I IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2I SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2I POST-V_01 ;
+Imprt+Pl2:%^A2It POST-V_01 ;

!!
LEXICON V_bew/egen__vblex !!= * @CODE@ bewegen:bew
+V:egt  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_bew/egen__vb_01 ;
+V000@D.PTC@:eg@D.PTC@ Inf ;
LEXICON V_bew/egen__vb_01
:eg  IND-PRS-SG1 ;
:eg IND-PRS-SG2 ;
:eg  IND-PRS-SG3 ;
:eg IND-PRS-PL1 ;
:eg  IND-PRS-PL2 ;
:eg IND-PRS-PL3 ;

:og IND-PRT_SEIN ;
:eg SUBJ-PRS ;
:og%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:eg POST-V_01 ;
+Imprt+Pl2:egt POST-V_01 ;

!!
LEXICON V_pfl/egen__vblex !!= * @CODE@ pflegen:pfl
V_bew/egen__vblex ;
+V@D.PTC@:0@D.PTC@ V_pfl/egen__vb_01 ;
LEXICON V_pfl/egen__vb_01
:eg IND-PRT ;
:eg SUBJ-PRT ;

!!
LEXICON V_z/iehen__vblex !!= * @CODE@ ziehen:z
+V:ogen  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_z/iehen__vb_01 ;
+V000@D.PTC@:ieh@D.PTC@ Inf ;
LEXICON V_z/iehen__vb_01
:ieh  IND-PRS-SG1 ;
:ieh IND-PRS-SG2 ;
:ieh  IND-PRS-SG3 ;
:ieh IND-PRS-PL1 ;
:ieh  IND-PRS-PL2 ;
:ieh IND-PRS-PL3 ;

:og IND-PRT_SEIN ;
:ieh SUBJ-PRS ;
:og%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:ieh POST-V_01 ;
+Imprt+Pl2:ieht POST-V_01 ;

!!
LEXICON V_fr/ieren__vblex !!= * @CODE@ frieren:fror
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_fr/ieren__vb_01 ;
+V000@D.PTC@:%^O2IE@D.PTC@ Inf ;
LEXICON V_fr/ieren__vb_01
:%^O2IE  IND-PRS-SG1 ;
:%^O2IE IND-PRS-SG2 ;
:%^O2IE  IND-PRS-SG3 ;
:%^O2IE IND-PRS-PL1 ;
:%^O2IE  IND-PRS-PL2 ;
:%^O2IE IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^O2IE SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^O2IE POST-V_01 ;
+Imprt+Pl2:%^O2IE%>t POST-V_01 ;

LEXICON V_sch/ießen__vblex !!= * @CODE@ schießen:schoss
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_sch/ießen__vb_01 ;
+V000@D.PTC@:%^O2IE%^CC2C@D.PTC@ Inf ;
LEXICON V_sch/ießen__vb_01
:%^O2IE%^CC2C  IND-PRS-SG1 ;
:%^O2IE%^CC2C IND-PRS-SG2 ;
:%^O2IE%^CC2C  IND-PRS-SG3 ;
:%^O2IE%^CC2C IND-PRS-PL1 ;
:%^O2IE%^CC2C  IND-PRS-PL2 ;
:%^O2IE%^CC2C IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^O2IE%^CC2C SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^O2IE%^CC2C POST-V_01 ;
+Imprt+Pl2:%^O2IE%^CC2C%>t POST-V_01 ;

!!
LEXICON V_f/ahren__vblex !!= * @CODE@ fahren:fahr
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_f/ahren__vb_01 ;
+V@D.PTC@:0@D.PTC@ Inf ;
LEXICON V_f/ahren__vb_01
IND-PRS-SG1 ;
:%^Umlaut IND-PRS-SG2 ;
:%^Umlaut  IND-PRS-SG3 ;
IND-PRS-PL1 ;
IND-PRS-PL2 ;
IND-PRS-PL3 ;

:%^A2U IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^A2Ü SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:t POST-V_01 ;

!!
LEXICON V_f/angen__vblex !!= * @CODE@ fangen:fang
+V:en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_f/angen__vb_01 ;
+V@D.PTC@:0@D.PTC@ Inf ;
LEXICON V_f/angen__vb_01
IND-PRS-SG1 ;
:%^Umlaut IND-PRS-SG2 ;
:%^Umlaut  IND-PRS-SG3 ;
IND-PRS-PL1 ;
IND-PRS-PL2 ;
IND-PRS-PL3 ;

:%^A2I IND-PRT_SEIN ;
: SUBJ-PRS ;
:%^A2I SUBJ-PRT_SEIN ;
+Imprt+Sg2: POST-V_01 ;
+Imprt+Pl2:t POST-V_01 ;

!!
LEXICON V_/dürfen__vblex !!= * @CODE@ dürfen:darf
+V00@R.PTC.ON@:%^A2U%>t@R.PTC.ON@  Praf ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_/dürfen__vb_01 ;
+V@D.PTC@:%^A2Ü@D.PTC@ Inf ;

!!
LEXICON V_l/iegen__vblex !!= * @CODE@ liegen:lag
+V:%^A2E%>en  Praf_ST ;    ! ge-formen akseptiert.
+V@D.PTC@:0@D.PTC@ V_l/iegen__vb_01 ;
+V000@D.PTC@:%^A2IE@D.PTC@ Inf ;
LEXICON V_l/iegen__vb_01
:%^A2IE  IND-PRS-SG1 ;
:%^A2IE IND-PRS-SG2 ;
:%^A2IE IND-PRS-SG3 ;
:%^A2IE IND-PRS-PL1 ;
:%^A2IE  IND-PRS-PL2 ;
:%^A2IE IND-PRS-PL3 ;

: IND-PRT_SEIN ;
:%^A2IE SUBJ-PRS ;
:%^Umlaut SUBJ-PRT_SEIN ;
+Imprt+Sg2:%^A2IE POST-V_01 ;
+Imprt+Pl2:%^A2IE%>t POST-V_01 ;

!!
LEXICON IND-PRS-SG1
+Ind+Prs+Sg1:%>e  POST-V_01 ;
LEXICON IND-PRS-SG2
+Ind+Prs+Sg2:%>st POST-V_01 ;
LEXICON IND-PRS-SG3
+Ind+Prs+Sg3:%>t  POST-V_01 ;
LEXICON IND-PRS-PL1
+Ind+Prs+Pl1:%>en POST-V_01 ;
LEXICON IND-PRS-PL2
+Ind+Prs+Pl2:%>t  POST-V_01 ;
LEXICON IND-PRS-PL3
+Ind+Prs+Pl3:%>en POST-V_01 ;


LEXICON POST-V_01
@D.SUP@ POST-V_02 ;


@D.FOR-PREFIX@ POST-V_03 ;
@R.PREFIX.AN-AUS@ PREFIX-AN/AUS ;
 @R.PREFIX.FOR-MOTION-VERBS@ PREFIX-FOR-MOTION-VERBS ;


LEXICON PREFIX-AN/AUS
@R.FOR-PREFIX.an@:@R.FOR-PREFIX.an@ POST-V_03 ;
@R.FOR-PREFIX.aus@:@R.FOR-PREFIX.aus@ POST-V_03 ;

LEXICON PREFIX-FOR-MOTION-VERBS
! THERE are limits to the length of continuation lexicon names
! PREFIX-AN-AUF-AUS-DURCH-EIN-FORT-HINAUF-HINAUS-HINEIN-HIN-HINÜBER-HINUNTER-HOCH-LOS-MIT-NACH-UNTER-VORAN-VORAUS-VORBEI-VOR-WEG-WEITER-ZU-ZURÜCK
!!##
@R.FOR-PREFIX.ab@ POST-V_03 ;
@R.FOR-PREFIX.abhande@ POST-V_03 ;
@R.FOR-PREFIX.an@ POST-V_03 ;
@R.FOR-PREFIX.auf@ POST-V_03 ;
@R.FOR-PREFIX.aus@ POST-V_03 ;
@R.FOR-PREFIX.auseinander@ POST-V_03 ;
@R.FOR-PREFIX.bei@ POST-V_03 ;
@R.FOR-PREFIX.dabei@ POST-V_03 ;
@R.FOR-PREFIX.daher@ POST-V_03 ;
@R.FOR-PREFIX.dahin@ POST-V_03 ;
@R.FOR-PREFIX.daneben@ POST-V_03 ;
@R.FOR-PREFIX.dar@ POST-V_03 ;
@R.FOR-PREFIX.daran@ POST-V_03 ;
@R.FOR-PREFIX.darauf@ POST-V_03 ;
@R.FOR-PREFIX.davon@ POST-V_03 ;
@R.FOR-PREFIX.dazwischen@ POST-V_03 ;
@R.FOR-PREFIX.drauf@ POST-V_03 ;
@R.FOR-PREFIX.durch@ POST-V_03 ;
@R.FOR-PREFIX.durcheinander@ POST-V_03 ;
@R.FOR-PREFIX.ein@ POST-V_03 ;
@R.FOR-PREFIX.einher@ POST-V_03 ;
@R.FOR-PREFIX.empor@ POST-V_03 ;
@R.FOR-PREFIX.entgegen@ POST-V_03 ;
@R.FOR-PREFIX.entlang@ POST-V_03 ;
@R.FOR-PREFIX.entzwei@ POST-V_03 ;
@R.FOR-PREFIX.fehl@ POST-V_03 ;
@R.FOR-PREFIX.fertig@ POST-V_03 ;
@R.FOR-PREFIX.fort@ POST-V_03 ;
@R.FOR-PREFIX.fremd@ POST-V_03 ;
@R.FOR-PREFIX.gut@ POST-V_03 ;
@R.FOR-PREFIX.heim@ POST-V_03 ;
@R.FOR-PREFIX.her@ POST-V_03 ;
@R.FOR-PREFIX.herab@ POST-V_03 ;
@R.FOR-PREFIX.heran@ POST-V_03 ;
@R.FOR-PREFIX.herauf@ POST-V_03 ;
@R.FOR-PREFIX.heraus@ POST-V_03 ;
@R.FOR-PREFIX.herbei@ POST-V_03 ;
@R.FOR-PREFIX.herein@ POST-V_03 ;
@R.FOR-PREFIX.hernieder@ POST-V_03 ;
@R.FOR-PREFIX.herum@ POST-V_03 ;
@R.FOR-PREFIX.herunter@ POST-V_03 ;
@R.FOR-PREFIX.hervor@ POST-V_03 ;
@R.FOR-PREFIX.herzu@ POST-V_03 ;
@R.FOR-PREFIX.herüber@ POST-V_03 ;
@R.FOR-PREFIX.hin@ POST-V_03 ;
@R.FOR-PREFIX.hinab@ POST-V_03 ;
@R.FOR-PREFIX.hinan@ POST-V_03 ;
@R.FOR-PREFIX.hinauf@ POST-V_03 ;
@R.FOR-PREFIX.hinaus@ POST-V_03 ;
@R.FOR-PREFIX.hinein@ POST-V_03 ;
@R.FOR-PREFIX.hinfort@ POST-V_03 ;
@R.FOR-PREFIX.hinter@ POST-V_03 ;
@R.FOR-PREFIX.hinunter@ POST-V_03 ;
@R.FOR-PREFIX.hinweg@ POST-V_03 ;
@R.FOR-PREFIX.hinzu@ POST-V_03 ;
@R.FOR-PREFIX.hinüber@ POST-V_03 ;
@R.FOR-PREFIX.hoch@ POST-V_03 ;
@R.FOR-PREFIX.irr@ POST-V_03 ;
@R.FOR-PREFIX.kaputt@ POST-V_03 ;
@R.FOR-PREFIX.klar@ POST-V_03 ;
@R.FOR-PREFIX.lang@ POST-V_03 ;
@R.FOR-PREFIX.los@ POST-V_03 ;
@R.FOR-PREFIX.längs@ POST-V_03 ;
@R.FOR-PREFIX.mit@ POST-V_03 ;
@R.FOR-PREFIX.nach@ POST-V_03 ;
@R.FOR-PREFIX.nahe@ POST-V_03 ;
@R.FOR-PREFIX.nieder@ POST-V_03 ;
@R.FOR-PREFIX.näher@ POST-V_03 ;
@R.FOR-PREFIX.ran@ POST-V_03 ;
@R.FOR-PREFIX.rauf@ POST-V_03 ;
@R.FOR-PREFIX.raus@ POST-V_03 ;
@R.FOR-PREFIX.rein@ POST-V_03 ;
@R.FOR-PREFIX.rum@ POST-V_03 ;
@R.FOR-PREFIX.runter@ POST-V_03 ;
@R.FOR-PREFIX.rüber@ POST-V_03 ;
@R.FOR-PREFIX.schief@ POST-V_03 ;
@R.FOR-PREFIX.tot@ POST-V_03 ;
@R.FOR-PREFIX.um@ POST-V_03 ;
@R.FOR-PREFIX.unter@ POST-V_03 ;
@R.FOR-PREFIX.voll@ POST-V_03 ;
@R.FOR-PREFIX.vonstatten@ POST-V_03 ;
@R.FOR-PREFIX.vor@ POST-V_03 ;
@R.FOR-PREFIX.voran@ POST-V_03 ;
@R.FOR-PREFIX.voraus@ POST-V_03 ;
@R.FOR-PREFIX.vorbei@ POST-V_03 ;
@R.FOR-PREFIX.vorwärts@ POST-V_03 ;
@R.FOR-PREFIX.vorüber@ POST-V_03 ;
@R.FOR-PREFIX.weg@ POST-V_03 ;
@R.FOR-PREFIX.weiter@ POST-V_03 ;
@R.FOR-PREFIX.wieder@ POST-V_03 ;
@R.FOR-PREFIX.zu@ POST-V_03 ;
@R.FOR-PREFIX.zugrunde@ POST-V_03 ;
@R.FOR-PREFIX.zurecht@ POST-V_03 ;
@R.FOR-PREFIX.zurück@ POST-V_03 ;
@R.FOR-PREFIX.zusammen@ POST-V_03 ;
@R.FOR-PREFIX.zustande@ POST-V_03 ;
@R.FOR-PREFIX.zuvor@ POST-V_03 ;
@R.FOR-PREFIX.über@ POST-V_03 ;
@R.FOR-PREFIX.überein@ POST-V_03 ;

LEXICON POST-V_02
 POST-V_03 ;


LEXICON POST-V_03
 POST-V_04 ;

LEXICON POST-V_04
#;
